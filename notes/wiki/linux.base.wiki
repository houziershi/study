

%title Linux基本操作

%toc Linux基本操作

= 系统信息 =

`uname -a`、`cat /etc/issue`

= 用户管理 =

修改用户配置：

{{{class="brush: bash"
usermod  [-u uid [-o]] [-g group] [-G group,...]
	[-d 主目录 [-m]] [-s shell] [-c 注释] [-l 新名称]
	[-f 失效日] [-e 过期日] [-p 密码] [-L|-U] 用户名
}}}



= 软件安装 =

[[linux.base.dpkg]]


= 任务管理 = 

中断任务：`Control + C`

挂起任务：`Control + Z`

显示当前任务的作业号`q：jobs`

指定任务８在后台执行
{{{class="brush: bash"
bg %8
}}}

指定任务８在前台执行
{{{class="brush: bash"
fg %8
}}}

= 文件操作 =

== 散列 ==

{{{class="brush: bash"
echo "yangpan220" | md5sum
}}}

注意上面的echo会自动加上一个回车。可以用-n去掉：

{{{class="brush: bash"
echo -n 'yangpan220' | md5sum
}}}


== 压缩 ==

=== bzip2 ===

{{{class="brush: bash"
$ bzip2 -v log.txt 
  log.txt:  3.953:1,  2.024 bits/byte, 74.70% saved, 336 in, 85 out.
$ bunzip2 -v log.txt.bz2 
  log.txt.bz2: done
$ ls
log.txt
$ 
}}}

=== zip ===

zip命令可以用来将文件压缩成为常用的zip格式。unzip命令则用来解压缩zip文件。

1. 我想把一个文件abc.txt和一个目录dir1压缩成为yasuo.zip：
{{{class="brush: bash"
zip -r yasuo.zip abc.txt dir1
}}}

2.我下载了一个yasuo.zip文件，想解压缩：
{{{class="brush: bash"
unzip yasuo.zip
}}}

3.我当前目录下有abc1.zip，abc2.zip和abc3.zip，我想一起解压缩它们：
{{{class="brush: bash"
unzip abc\?.zip
// ?表示一个字符，如果用*表示任意多个字符。
}}}


4.我有一个很大的压缩文件large.zip，我不想解压缩，只想看看它里面有什么：
{{{class="brush: bash"
unzip -v large.zip
}}}

5.我下载了一个压缩文件large.zip，想验证一下这个压缩文件是否下载完全了：
{{{class="brush: bash"
unzip -t large.zip
}}}

6.我用-v选项发现music.zip压缩文件里面有很多目录和子目录，并且子目录中其实都是
歌曲mp3文件，我想把这些文件都下载到第一级目录，而不是一层一层建目录：
{{{class="brush: bash"
unzip -j music.zip
}}}

= 文本文件 =

== 查找 ==

{{{class="brush: bash"
find / -name "*.conf" | xargs grep "alias" 
}}}

== 编码与格式 ==

=== 字符编码 ===

转换单个文件：

{{{class="brush: bash"
iconv -f GBK -t UTF-8 tt.json > tt.json
}}}

把当前目录下的文件转换编码：

{{{class="brush: bash"
sed -i "s/old/new/g" `grep old -rl ./`
}}}

或是：

{{{class="brush: bash"
`enca -L zh_CN -x utf-8 *`
}}}

=== 换行 ===

Windows文本文件的`^M`，注意这个`^M`的输入方式为`CTRL v CTRL m`。

使用`dos2unix`命令:

{{{class="brush: bash"
$ dos2unix myfile.txt
}}}

使用sed命令：

{{{class="brush: bash"
$ sed -e ‘s/^M/\n/g’ myfile.txt
}}}
