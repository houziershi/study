


= 合并pdf文件 =

pdftk命令用来合并几个pdf文件。你必须安装有 pdftk 程序。如果还没有，请用apt或
yum来获取相应的包。

{{{class="brush: bash"
$ pdftk 1.pdf 2.pdf 3.pdf …. 10.pdf cat output merged.pdf
}}}


= 主机信息 =

显示主机IP：

{{{class="brush: bash"
hostname -I
}}}

{{{class="brush: bash"
df -h --total                    // 列出SD卡的总容量、已用及可用容量
free -th                         // 列出系统内存使用情况
top                              // 列出CPU使用情况及当前内存活动情况。退出键入q
ping -c 3 http://www.google.com  // 检查树莓派是否连接到网络
cd ~                             // 使你进入用户主文件夹
ls                               // 列出当前文件夹里面的文件及子文件夹
ls -l                            // 详细列出文件及子文件夹的信息
ls -l -color                     // 用不同颜色标志列出文件及子文件夹信息
reboot                           // 重启树莓派
shutdown -hP 0                   // 关闭并断开树莓派电源。注意数字0
clear                            // 清屏
}}}

常用别名：

{{{class="brush: bash"
# Alias definitions.
# You may want to put all your additions in here.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

# Enable color support
if [ -x /usr/bin/dircolors ]; then
test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
alias ls='ls –color=auto'
alias grep='grep –color=auto'
alias fgrep='fgrep –color=auto'
alias egrep='egrep –color=auto'
fi

# Extra ls aliases
alias ll='ls -FAl'
alias la='ls -FA'
alias l='ls -FAoh'

# Raspberry Pi Aliases
alias raspi-audio="/usr/bin/alsamixer"
alias raspi-cpu="/bin/cat /proc/cpuinfo"
alias raspi-disk="/bin/df -h –total"
alias raspi-firmware="/opt/vc/bin/vcgencmd version"
alias raspi-mem="/usr/bin/free -th"
alias raspi-ip="/bin/hostname -I"
alias raspi-ping="/bin/ping -c 3 http://www.google.com"
alias raspi-reboot="/sbin/reboot"
alias raspi-shutdown="/sbin/shutdown -Ph 0"
alias raspi-update="/usr/bin/apt-get update -y;/usr/bin/apt-get upgrade -y"
alias raspi-version="/bin/cat /proc/version"
}}}

= 查看linux page cache里的内容 =

{{{class="brush: bash"
# free -mt
             total       used       free     shared    buffers     cached
Mem:          7168       7055        112          0        265       5772
-/+ buffers/cache:       1017       6150
Swap:            0          0          0
Total:        7168       7055        112
}}}

可以看到cache了5G多，那么cache里都装了哪些内容呢？

https://code.google.com/p/linux-ftools/

{{{class="brush: bash"
# ~/linux-ftools/linux-fincore --pages=false --summarize --only-cached *
filename                  size        total_pages    min_cached page       cached_pages        cached_size        cached_perc
--------                  ----        -----------    ---------------       ------------        -----------        -----------
php_error.txt   10,290,322,753          2,512,286            462,368          1,337,965      5,480,304,640              53.26
}}}

可以看到，绝大部分cache里装的是`php_error.txt`内容，我们一直在
`tail -F php_error.txt`，因此被放入了cache。


= 常用监控工具 =

== htop – 交互式进程查看器 ==

htop是top的扩展版本，有更丰富的概貌（例如全命令、可视化、图形用户界面gui和用户
界面ui），有鼠标点击交互（译者注：看下面的截图，指的是最上面的列标题如CPU%、
MEM%等可以通过鼠标点击切换以显示不同的功能），也有许多的指导教你如何做进程管理。

== iotop – 简单的类似top的I/O监控器 ==

iotop是IO实时监控器。使用它们附属的详细输入输出（IO）使用方法可以展示出你系统中
每个进程线程的信息。

该命令可以与tcpdump（响应网络流量的命令）一起使用。如果你发现你的web服务器上有
程序在运行，你可以，比如运行tcpdump port 80检查端口80（标准的http端口）的网络
流量来观察细节。

最有用的信息可能是DISK WRITE这一列，从该列你可以准确的看到每个IO使用了多少个进程
，单位为K/s。

== apachetop – 展示web服务器实时统计数据 ==

Apachetop展示Apache web服务器上关于http请求的实时表。

它显示统计（stats）, 点击（hits）, 请求（requests）, 请求细节（request details）
，且能够获得当前你的web服务器正在运行程序的概貌，这一点很赞。

如果你使用的是Nginx，也有一些相似的工具，但似乎没有apachetop那么详细。


== Glances – 基于CLI curses库的监控工具 ==

Glances用各个分离的表列展示了你机器当前正运行的各种有用的实时数据。Glances旨在
用最小的空间显示尽可能多的信息，我认为它的目标完全达到了。

Glances用有限的交互可能性和更深层的信息监控PerCPU, Load, Memory, Swap, Network, 
	Disk i/O, Mount data 和processes，但对于获得一个整体概貌绝对是完美的。
	

{{{class="brush: bash"
}}}


{{{class="brush: bash"
}}}


{{{class="brush: bash"
}}}

