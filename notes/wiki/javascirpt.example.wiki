

=== 判断一个元素是否存在 ===

使用传统javascript方法，如下：

{{{class="brush: javascript"
if(document.getElementById('div')) {    
    // 找到到对应元素
} else {    
    // 没有找到找到到对应元素
}
}}}

使用jQuery则比较简单，只需判断此元素的长度是否为0，如果为0则此元素不存在，
代码如下：

{{{class="brush: javascript"
if ($("#div").length > 0){
    // 找到对应id=div的元素，然后执行此块代码
}
}}}

甚至能找到组合元素，如下，我们找一个id定义为div的元素里面是否包含img：

{{{class="brush: javascript"
if(document.querySelector("#div img")){
//found
}
}}}

或用jquery： 

{{{class="brush: javascript"
if ($("#div img").length > 0){
    // 找到对应id=div并且包含img的元素，然后执行此块代码
}
}}}


=== 禁止页面滚动 ===

页面滚动失效：

{{{class="brush: javascript"
$("body").css("overflow-y","hidden");
}}}

恢复页面滚动：

{{{class="brush: javascript"
$("body").css("overflow-y","auto");
}}}


=== 地址的跳转 ===

{{{class="brush: javascript"
url = url + "&sendTime=" + (new Date()).getSeconds();
url = encodeURI(url);
if( true == $('#toNewWindow').val() ) {
    window.open(url);
 } else {
    window.location = url;
    // document.location = url; //这样用了N年了
 }
}}}

=== jQuery修改表单提交目标 ===

{{{class="brush: javascript"
$("#myForm").attr('action', url);
}}}

=== jQuery请求提交 ==

序列化表单并提交

{{{class="brush: javascript"
var formData = $("#myForm").serialize();
}}}

可能给已经序列化的表单加上新的内容

{{{class="brush: javascript"
formData = formData + "&id=001&name=Jade";
}}}

也可以手动建立内容

{{{class="brush: javascript"
formData = {'id':'001' , 'name':'Jade'};
}}}

提交请求

{{{class="brush: javascript"
$.post(url, formData,
    function(data, textStatus) {
        if('success' == textStatus ) {
            // 得到服务器成功响应
            // testStatus 为响应内容
        } else {
            // 提交失败
        }
    }
);
}}}

服务器端Java响应

{{{class="brush: javascript"
response.setContentType("text/plain");
response.setCharacterEncoding("UTF-8");
response.getWriter().write(responseStr);
}}}

form中只要有任意`<button>`或者`<input type="submit" />`的按钮都会导致回车提交

上传的按钮改成这样

`<input type="button" onclick="return ajaxFileUpload();" value="Upload" />``

就不会触发自动提交了。

替换onClick事件：

{{{class="brush: javascript"
$(obj).unbind('click').removeAttr('onclick');
 
$(obj).bind("click",function(){
    like_old(itemId,obj);
});
}}}

{{{class="brush: javascript"

}}}

{{{class="brush: javascript"

}}}

{{{class="brush: javascript"

}}}

{{{class="brush: javascript"

}}}
