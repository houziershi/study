
%title XMPP

%toc XMPP

= JID =

格式：`local@domain/resource`


= STANZAS =

{{{class="brush: xml"
<stream:stream>

	<iq type='get'>
		<query xmlns='jabber:iq:roster'/>
	</iq>
	
	<presence/>
	
	<message type='chat'
		to='darcy@pemberley.lit' from='elizabaeth@longbourn.lit/ballroom'>
		<body>I cannot talk of books in a ball-room; my head is always full of
		something else.</body>
	</message>
	
	<presence type='unavailable'/>

</stream:stream>
}}}

== 常见属性 ==

=== from ===

不推荐发出消息设置from，一般由服务器设。如果from值不对服务器可能会拒绝信息。

=== to ===

如果客户端到服务器中没有to，则被认为是发给服务器的。

=== type ===

type如果为`error`，表示此类消息错误。不要回应`error`以避免错误消息在网络上循环。

=== id ===

帮助识别响应。对`<iq>`来说是必须的。

== 常见片段 ==

=== Presence ===

控制用户可见状态。

* `show`：状态
* `status`：描述
* `priority`：优先级，没有完整JID的目标应该发给多个resource上登录中的哪一个。
  范围：`-128`到`127`，默认为`0`。
  - 负值表示不收到明确指定给自己的消息。如果自己有一个resource上专门运行了一个
	  自动机器人服务的话，优先级可以用负值。

{{{class="brush: xml"
<!-- 上线 -->
<presence/>

<!-- 下线 -->
<presence type='unavailable'/>

<!-- 状态与说明 -->
<presence>
	<show>away</show>
	<status>at the ball</status>
</presence>

<!-- 说明与优先级 -->
<presence>
	<status>touring the countryside</status>
	<priority>10</priority>
</presence>

<!-- 优先级 -->
<presence>
	<priority>10</priority>
</presence>
}}}

=== Message ===

{{{class="brush: xml"
<message from='bingley@netherfield.lit/drawing_room'
	to='darcy@pemberley.lit'
	type='chat'>
	<body>Come, Darcy, I must have you dance.</body>
	<thread>4fd61b376fbc4950b9433f031a5595ab</thread>
</message>

<message from='bennets@chat.meryton.lit/mrs.bennet'
	to='mr.bennet@longbourn.lit/study'
	type='groupchat'>
	<body>We have had a most delightful evening, a most excellent ball.</body>
</message>
}}}

`type`属性是可选的，但推荐提供：
* `chat`：一对一
* `error`：说明出错，地址不对、域名错误
* `normal`：范围扩大出一对一的消息，很少见这种情况
* `groupchat`：群聊
* `headline`：一般是自动消息

{{{class="brush: xml"
}}}

=== IQ ===

向服务器请求资源，如联系人列表等。相当于HTTP中的GET，POST等动作。



{{{class="brush: xml"
<iq from='jane@longbourn.lit/garden' type='get' id='roster1'>
	<query xmlns='jabber:iq:roster'/>
</iq>

<iq to='jane@longbourn.lit/garden' type='error' id='roster1'>
	<query xmlns='jabber:iq:roster'/>
	<error type='cancel'>
		<feature-not-implemented xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
	</error>
</iq>
}}}

{{{class="brush: xml"

<iq from='jane@longbourn.lit/garden' type='get' id='roster2'>
	<query xmlns='jabber:iq:roster'/>
</iq>

<iq to='jane@longbourn.lit/garden' type='result' id='roster2'>
	<query xmlns='jabber:iq:roster'>
		<item jid='elizabeth@longbourn.lit' name='Elizabeth'/>
		<item jid='bingley@netherfield.lit' name='Bingley'/>
	</query>
</iq>
}}}


{{{class="brush: xml"
<iq from='jane@longbourn.lit/garden' type='set' id='roster3'>
	<query xmlns='jabber:iq:roster'>
		<item jid='darcy@pemberley.lit' name='Mr. Darcy'/>
	</query>
</iq>

<iq to='jane@longbourn.lit/garden' type='result' id='roster3'/>
}}}

=== error ===

以上三种片段都会有对应的错误，`error`有`error`元素包含生成错误的片段。

要有`type`属性，值可能为：

* `cancel`：不应该再试
* `continue`：这种情况不常见
* `modify`：要改后才能被接受
* `auth`：需要权限
* `wait`：服务暂时不可用

{{{class="brush: xml"
<iq from='pubsub.pemberley.lit' to='elizabeth@longbourn.lit/sitting_room'
	type='error' id='subscribe1'>
	<pubsub xmlns='http://jabber.org/protocol/pubsub'>
		<subscribe node='latest_books' jid='elizabeth@longbourn.lit'/>
	</pubsub>
	<error type='cancel'>
		<not-allowed xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
		<closed-node xmlns='http://jabber.org/protocol/pubsub#errors'/>
		<text xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'>
			You must be on the whitelist to subscribe to this node.
		</text>
	</error>
</iq>
}}}





= 连接生命周期 =

建立连接 -> 建立流 -> 发片段 

== 建立连接 ==

根据域名所在的主机查找SRV（服务），连接提供服务的主机。

== 建立流 ==

`<stream:stream>`元素发给服务器。

{{{class="brush: xml"
<?xml version='1.0'?>
<stream:stream xmlns='jabber:client'
	xmlns:stream='http://etherx.jabber.org/streams'
	version='1.0'
	to='pemberley.lit'>
}}}

服务器响应：

{{{class="brush: xml"
<?xml version='1.0'?>
<stream:stream xmlns='jabber:client'
	xmlns:stream='http://etherx.jabber.org/streams' version='1.0'
	from='pemberley.lit'
	id='893ca401f5ff2ec29499984e9b7e8afc'
	xml:lang='en'>

<stream:features>
	<starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>
	<compression xmlns='http://jabber.org/features/compress'>
		<method>zlib</method>
	</compression>
	<mechanisms xmlns='urn:ietf:params:xml:ns:xmpp-sasl'>
		<mechanism>DIGEST-MD5</mechanism>
		<mechanism>PLAIN</mechanism>
	</mechanisms>
</stream:features>
}}}

`<stream:features>`说明服务器的我，这里说有支持TLS验证和zlib压缩

== 验证 ==

TLS成功加密后流建立，验证方式是SASL。成功验证后客户端要绑定一个资源到连接然后
开启一个session。如果没有指定当前resource的名字，服务器会给出一个随机的名字。

== 断开连接 ==

发一个关闭`<stream:stream>`的标签：

{{{class="brush: xml"
	<presence type='unavailable'/>
</stream:stream>
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}





{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}





{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}





{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}





{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}





{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}


{{{class="brush: xml"
}}}



