
%title VimWiki插件

%toc VimWiki插件入门


= 安装与配置 =

== 安装 ==

下载安装文件[[http://www.vim.org/scripts/script.php?script_id=2226|vimwiki-N-N.vba.gz]]

直接在vim中打开该文件，执行以下命令安装：
{{{class="brush: bash"
:so %
}}}

解压完成后你可能还需要重建帮助文件索引。请执行 
{{{class="brush: bash"
:helptags $VIMFILES/doc
}}}

其中`$VIMFILES`就是您的vimfiles目录。这是需要在vimrc中定义的系统变量。

Windows下应该是：`$VIM/vimfiles`；Linux下是：`~/.vim/`

如果vimrc没有显式指定，可以加上：

{{{class="brush: js;"
if has("win32")
  let $VIMFILES = $VIM.'/vimfiles'
else
  let $VIMFILES = $HOME.'/.vim'
endif
}}}



== 配置 ==

{{{class="brush: bash"
" 官方建议
set nocompatible 
filetype plugin on 
syntax on 

" ===========================
"
" VimWiki
"
" ===========================

" 多个wiki项目
let g:vimwiki_list = [{'path': '~/vimwiki/',
	\ 'path_html': '~/vimwiki/html/',
	\ 'template_path': '~/vimwiki/template/',
	\ 'template_default': 'template',
	\ 'template_ext': '.htm'}
	\,{'path': '~/workspace/study/vimwiki/',
	\ 'path_html': '~/workspace/study/vimwiki/html/',
	\ 'template_path': '~/workspace/study/vimwiki/template/',
	\ 'template_default': 'template',
	\ 'html_header': 'header.htm',
	\ 'html_footer': 'footer.htm',
	\ 'auto_export': 1,
	\ 'diary_link_count': 5,
	\ 'template_ext': '.htm'}
	\]

" 是否在词条文件保存时就输出html这个会让保存大词条比较慢所以默认没有启用
" 有需要的话就把这一行复制到对应项目里去
"     \ 'auto_export': 1,

" 对中文用户来说，我们并不怎么需要驼峰英文成为维基词条
let g:vimwiki_camel_case = 0
 
" 标记为完成的checklist项目会有特别的颜色
let g:vimwiki_hl_cb_checked = 1
 
" 我的vim是没有菜单的，加一个vimwiki菜单项也没有意义
let g:vimwiki_menu = ''
 
" 是否开启按语法折叠会让文件比较慢
"let g:vimwiki_folding = 1
 
" 是否在计算字串长度时用特别考虑中文字符
" let g:vimwiki_CJK_length = 1
 
" 指定可以用的html标签
let g:vimwiki_valid_html_tags='b,i,s,u,sub,sup,kbd,del,br,hr,div,code,h1'

" 不列出来的，会作聪明地在你的链接后面再加上 .html
let g:vimwiki_file_exts = 'c, cpp, wav, txt, h, hpp, zip, sh, awk, ps, pdf'

" 如果生成HTML的目录下有手工hack的html文件，也会被无情的删除，
" 选项配置用户html文件，不被自动删除。
let g:vimwiki_user_htmls = 'contact.html, canvas-1.html, html.html'

map <F5> :Vimwiki2HTML<cr> 
map <S-F5> :VimwikiAll2HTML<cr>
}}}

= Wiki项目配置详解： =

{{{class="brush: bash"
{'path': '~/workspace/study/vimwiki/',
	\ 'path_html': '~/workspace/study/vimwiki/html/',
	\ 'template_path': '~/workspace/study/vimwiki/template/',
	\ 'template_default': 'template',
	\ 'html_header': 'header.htm',
	\ 'html_footer': 'footer.htm',
	\ 'template_ext': '.htm',
	\ 'diary_link_count': 5,
	\ 'auto_export': 1 }
}}}
path :: 指定wiki路径。是必须的，说明你想要把wiki条目存在哪个目录。
path_html :: 制定生成的html路径，一些相关调用的css,js也都放在这里。默认是与 path 同目录下的 WIKIFOLDER_html ，其中 WIKIFOLER 是你存放维基条目的文件夹名。
template_path :: 是模板的路径。
template_default :: 指定默认的模板名称。
template_ext :: 指定模板的后缀名，建议把模板文件后缀采用 htm ，既和生成的 html 有所区分，又能保证语法高亮和各种 ftplugin 可用。
html_header :: 头部模板。
html_footer :: 尾部模板。
diary_link_count :: 是指diary.wiki里每行放多少个日志链接。 
auto_export :: 保存后自动生成html文件。如果文件大的话会比较慢。

综上，template_path/template_default.template_ext就是模板了 



目录的结构见：

<img src="images/vimwiki/vimwiki-mockups.png" />


= 基本操作 =

控制符`<leader>`默认为反斜杠`\`。

`:h vimwiki`查看wiki的帮助。

== 项目操作 ==

=== 快捷键 ===
* \ww    打开 wiki首页
* \wt    在标签页中打开wiki首页
* [n]\ww 打开第 N 个 Wiki，如果没指定，则打开默认 Wiki
* [n]\wt 新标签页打开第 N 个Wiki
* \ws    打开 Wiki 列表并选择打开
* \wr    重命名wiki文件
* \wd    删除wiki文件


== Golbal 命令 == 

* :VimwikiGoHome
* :VimwikiTabGoHome
* :VimwikiUISelect

== Buffer 命令 == 

* :Vimwiki2HTML
* :VimwikiAll2HTML
* :VimwikiDeleteWord
* :VimwikiDeleteWord
* :VimwikiFollowWord
* :VimwikiGoBackWord
* :VimwikiNextWord
* :VimwikiPrevWord
* :VimwikiRenameWord
* :VimwikiSplitWord
* :VimwikiToggleListItem
* :VimwikiVsplitWord
   


== 文档结构 ==

=== 代码 ===
* `%toc`    自动生成的目录
* `%title`  指定HTML文档的title
* `%nohtml` 告诉vimwiki不为某条目生成HTML文件。即使你在该条目打开时为它单独执行:Vimwiki2HTML也不会生成

{{{class="brush: bash"
     = 标题一 =
    == 标题二 ==
   === 标题三 ===
  ==== 标题四 ====
 ===== 标题五 =====
====== 标题六 ======
}}}

=== 快捷键 ===
* `=`    升高标题级别（和`+`是同一个键）。
* `-`    降低标题级别。

== 链接操作 ==

{{{class="brush: bash;"
WikiItem                      大写开头的驼峰英文会被自动当作一个维基词条，
                              并添加链接
!TextText                     不要链接指定的 !WikiWord
[[Wiki Item]]                 这是手动建立维基词条的方式
[[wiki item|description]]     输出HTML时显示description，链到 wiki item

}}}

== 链接操作 ==

{{{class="brush: bash"
http://site/             :: 自动连接
[http://site/ home page] :: 带描述的连接

[[http://site/|desc]]    :: 表格中不能用
[[http://site/][desc]]   :: 表格中能用


http://site/pic.jpg      :: 解析为图片
[[images/pic.jpg]]       :: 链接到本地图片
}}}

=== 快捷键 ===
打开链接时，如果目标页面不存在，会自动新建
* shift + enter  水平分割窗口打开wiki链接
* ctrl + enter   垂直分割窗口打开wiki链接
* tab            到下一个链接
* shift + tab    到上一个链接
* 回车           进入wiki连接（如果是外链则在浏览器打开） 
* 退格键         返回上级wiki



== 源代码操作 ==

=== 代码 ===
生成`<pre>`标签：
{{{class="brush: bash"
    print "hello"      缩进四个字符
}}}

`{{{attr=value`与`}}}`包起的多行内容，生成的格式为：
{{{class="brush: html"
<pre attr='value'>
	print "hello"
</pre>
}}}

生成`<code>`标签：
{{{class="brush: bash"
`print "hello"`        SHIFT + 1
}}}


== 表格 ==

{{{class="brush: bash"
| 表格 | 表格 | 表格 |
| 表格 | 表格 | 表格 |
| 表格 | 表格 | 表格 |
}}}


== 列表 ==

无序列表：`*`和`-`是等价的，后面必须跟一个空格
{{{class="brush: bash"
* 无序列表 条目一
* 无序列表 条目二 
  - 子列表 条目一
  - 子列表 条目二
}}}

有序列表

{{{class="brush: bash"
# items
# items
# items
# items
}}}

定义列表

{{{class="brush: bash"
define :: desption
define :: desption
define :: desption
define :: desption
}}}

== 字体 ==

{{{class="brush: bash"
*粗体*
_斜体_
~~删除线~~
^上标^
,,下标,,
<!- - 注释 - ->
}}}


== 日记功能 ==

使用快捷键`<leader>w<leader>w`可以快速编辑当天的日记。还可以配合[[http://www.vim.org/scripts/script.php?script_id=52|Calendar插件]]轻松管理你的日记。
{{{class="brush: bash"
" calendar
map <F8> :Calendar<cr> 
}}}

按 F8 调出日历窗口，按 q 退出。

在日期上点回车，就可以编辑当天的日记了！

PS: 按左右键在前后一个月里跳转，按上下键在前后一年跳转。按 t 回到当天。当然，Vim 默认的上下左右 hjkl 也是能用的。 
