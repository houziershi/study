%title CSS

%toc CSS

= 背景 =

== 所有背景属性都不能继承 ==

可以为所有元素设置背景色，这包括`body`一直到`em`和`a`等行内元素。
`background-color`不能继承，其默认值是`transparent`“透明”。
如果一个元素没有指定背景色，那么背景就是透明的，这样其祖先元素的背景才能可见。
这条规则把元素的背景设置为灰色：

{{{class="brush: css"
p {background-color: gray;}
}}}

== 增加内边距： ==

{{{class="brush: css"
p {background-color: gray; padding: 20px;}
}}}

== 背景图像 ==

图像放入背景`background-image`默认值是`none`。大多数背景都应用到`body`元素，不过
并不仅限于此。`background-image`也不能继承。如果需要设置一个背景图像，必须为这个
属性设置一个 URL 值：

{{{class="brush: css"
body {background-image: url(/i/eg_bg_04.gif);}
}}}

可以为行内元素设置背景图像：

{{{class="brush: css"
a.radio {background-image: url(/i/eg_bg_07.gif);}
}}}

属性值`repeat`导致图像在水平垂直方向上都平铺，就像以往背景图像的通常做法一样。
`repeat-x`和`repeat-y`分别导致图像只在水平或垂直方向上重复，`no-repeat`则不允许
图像在任何方向上平铺。默认地，背景图像将从一个元素的左上角开始。请看下面的例子：

{{{class="brush: css"
body { 
  background-image: url(/i/eg_bg_03.gif);
  background-repeat: repeat-y;
}
}}}

可以利用`background-position`属性改变图像在背景中的位置。下面的例子在`body`元素
中将一个背景图像居中放置：

{{{class="brush: css"
body { 
    background-image:url('/i/eg_bg_03.gif');
    background-repeat:no-repeat;
    background-position:center;
}
}}}

为`background-position`属性提供值有很多方法。

首先，可以使用一些关键字：`top`、`bottom`、`left`、`right`和`center`。`100px`或
`5cm`，最后也可以使用百分数值。

图像放置关键字最容易理解，其作用如其名称所表明的。`top right`使图像放置在元素
内边距区的右上角。如果只出现一个关键字，则认为另一个关键字是`center`。

所以，如果希望每个段落的中部上方出现一个图像，只需声明如下：

{{{class="brush: css"
p { 
    background-image:url('bgimg.gif');
    background-repeat:no-repeat;
    background-position:top;
}
}}}

下面是等价的位置关键字：

| 单一关键字 | 等价的关键字                   |
|------------|--------------------------------|
| center     | center center                  |
| top        | top center 或 center top       |
| bottom     | bottom center 或 center bottom |
| right      | right center 或 center right   |
| left       | left center 或 center left     |

百分数值的表现方式：

{{{class="brush: css"
body { 
    background-image:url('/i/eg_bg_03.gif');
    background-repeat:no-repeat;
    background-position:50% 50%;
}
}}}

如把一个图像放在水平方向 2/3、垂直方向 1/3 处，可以这样声明：

{{{class="brush: css"
body { 
    background-image:url('/i/eg_bg_03.gif');
    background-repeat:no-repeat;
    background-position:66% 33%;
}
}}}

如果只提供一个百分数值，所提供的这个值将用作水平值，垂直值将假设为 50%。这一点
与关键字类似。

长度值解释的是元素内边距区左上角的偏移。偏移点是图像的左上角。

如果设置值为 50px 100px，图像的左上角将在元素内边距区左上角向右 50 像素、向下 
100 像素的位置上：

{{{class="brush: css"
body { 
    background-image:url('/i/eg_bg_03.gif');
    background-repeat:no-repeat;
    background-position:50px 100px;
}
}}}

注意，这一点与百分数值不同，因为偏移只是从一个左上角到另一个左上角。也就是说，
图像的左上角与`background-position`声明中的指定的点对齐。

`background-attachment`属性防止背景图像随内容滚动：

{{{class="brush: css"
body {
  background-image:url(/i/eg_bg_02.gif);
  background-repeat:no-repeat;
  background-attachment:fixed
}
}}}

 CSS 背景属性                                                         
 
| 属性背景属性          | 描述                                         |
|-----------------------|----------------------------------------------|
| background            | 简写属性，作用是将背景属性设置在一个声明中。 |
| background-attachment | 背景图像是否固定或者随着页面的其余部分滚动。 |
| background-color      | 设置元素的背景颜色。                         |
| background-image      | 把图像设置为背景。                           |
| background-position   | 设置背景图像的起始位置。                     |
| background-repeat     | 设置背景图像是否及如何重复。                 |


= 设置表单组件的样式 =

{{{class="brush: css"
input[type="text"] {
  width:150px;
  display:block;
  margin-bottom:10px;
  background-color:yellow;
  font-family: Verdana, Arial;
}

input[type="button"] {
  width:120px;
  margin-left:35px;
  display:block;
  font-family: Verdana, Arial;
}
}}}

= 超链接 =

* 注意：在 CSS 定义中，a:hover 必须位于 a:link 和 a:visited 之后，这样才能生效！
* 注意：在 CSS 定义中，a:active 必须位于 a:hover 之后，这样才能生效！

{{{class="brush: html"
<style type="text/css">
	a:link		{color: #FF0000}
	a:visited	{color: #00FF00}
	a:hover		{color: #FF00FF}
	a:active	{color: #0000FF}
</style>
}}}

{{{class="brush: html"
<style type="text/css">
	a.two:link {color: #ff0000}
	a.two:visited {color: #0000ff}
	a.two:hover {font-size: 150%}
</style>
<a class="two" href="/index.html" target="_blank">这个链接改变字体大小</a>
}}}

{{{class="brush: html"
<style type="text/css">
	a.three:link {color: #ff0000}
	a.three:visited {color: #0000ff}
	a.three:hover {background: #66ff66}
</style>
<a class="three" href="/index.html" target="_blank">这个链接改变背景颜色</a>
}}}

{{{class="brush: html"
<style type="text/css">
	a.four:link {color: #ff0000}
	a.four:visited {color: #0000ff}
	a.four:hover {font-family: monospace}
</style>
<a class="four" href="/index.html" target="_blank">这个链接改变字体系列</a>
}}}

{{{class="brush: html"
<style type="text/css">
	a.five:link {color: #ff0000; text-decoration: none}
	a.five:visited {color: #0000ff; text-decoration: none}
	a.five:hover {text-decoration: underline}
</style>
<a class="five" href="/index.html" target="_blank">这个链接改变文本装饰</a>
}}}



== :focus伪类(取得焦点) ==

{{{class="brush: html"
<style type="text/css">
	input:focus { background-color:yellow; }
</style>
<input type="text" name="fname" />
}}}



== :first-child(第一个子元素) ==

{{{class="brush: html"
<style type="text/css">
	p:first-child {font-weight: bold;}
	li:first-child {text-transform:uppercase;}
</style>
<ul>
	<li>Intert Key</li>
	<li>Turn key <strong>clockwise</strong></li>
	<li>Push accelerator</li>
</ul>
<p>Do <em>not</em> push the brake at the same time as the accelerator.</p>
}}}



== :first-child(第一个子元素) ==

lang 伪类允许您为不同的语言定义特殊的规则。在下面的例子中，在下面的例子中，
`:lang`类为带有值为 "no" 的`lang`属性的`q`元素定义引号的类型：`</p>`

{{{class="brush: html"
<style type="text/css">
	q:lang(no) { quotes: "~" "~" }
</style>

<p>一些文本 <q lang="no">段落中的引用</q> 一些文本。</p>
}}}





